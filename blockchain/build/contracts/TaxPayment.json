{
  "contractName": "TaxPayment",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "klay",
          "type": "uint256"
        }
      ],
      "name": "AcquisitionTaxPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "klay",
          "type": "uint256"
        }
      ],
      "name": "CapitalGainsTaxPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payAcquisitionTax",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payCapitalGainsTax",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_newTaxAccount",
          "type": "address"
        }
      ],
      "name": "setBankAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"klay\",\"type\":\"uint256\"}],\"name\":\"AcquisitionTaxPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"klay\",\"type\":\"uint256\"}],\"name\":\"CapitalGainsTaxPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payAcquisitionTax\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payCapitalGainsTax\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newTaxAccount\",\"type\":\"address\"}],\"name\":\"setBankAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TaxPayment.sol\":\"TaxPayment\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"project:/contracts/TaxPayment.sol\":{\"keccak256\":\"0x1b3b00a6dcade89951d9ba6ed0b67c422f95ed35d570ae7d5e19518a55cdcec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cbfeb1442652afeaf22402837df1a503c7d2b8c1917008ce08a37574e32cd1f\",\"dweb:/ipfs/QmTpfxBaBxzS457W59nBGm5THZ2FAmB3VeRtV5kbhNFxsy\"]}},\"version\":1}",
  "bytecode": "0x60806040523462000037576200001e6200001862000110565b620001d0565b620000286200003d565b610973620003b6823961097390f35b62000043565b60405190565b5f80fd5b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b90620000719062000047565b810190811060018060401b038211176200008a57604052565b62000051565b90620000a76200009f6200003d565b928362000065565b565b5f80fd5b60018060a01b031690565b620000c390620000ad565b90565b620000d181620000b8565b03620000d957565b5f80fd5b90505190620000ec82620000c6565b565b906020828203126200010a5762000107915f01620000dd565b90565b620000a9565b6200013362000d2980380380620001278162000090565b928339810190620000ee565b90565b90565b620001526200014c6200015892620000ad565b62000136565b620000ad565b90565b620001669062000139565b90565b62000174906200015b565b90565b5f1b90565b906200018f60018060a01b039162000177565b9181191691161790565b620001a4906200015b565b90565b90565b90620001c4620001be620001cc9262000199565b620001a7565b82546200017c565b9055565b620001db9062000261565b62000206620001fe73cd48b32650621694240fafb2d467cdb52fd9579562000169565b6001620001aa565b565b90565b620002246200021e6200022a9262000208565b62000136565b620000ad565b90565b62000238906200020b565b90565b6200024690620000b8565b9052565b91906200025f905f602085019401906200023b565b565b80620002826200027b620002755f6200022d565b620000b8565b91620000b8565b14620002955762000293906200034a565b565b620002c5620002a45f6200022d565b620002ae6200003d565b918291631e4fbdf760e01b8352600483016200024a565b0390fd5b5f1c90565b60018060a01b031690565b620002e8620002ee91620002c9565b620002ce565b90565b620002fd9054620002d9565b90565b6200030b9062000139565b90565b620003199062000300565b90565b90565b90620003396200033362000341926200030e565b6200031c565b82546200017c565b9055565b5f0190565b620003555f620002f1565b62000361825f6200031f565b9062000399620003927f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936200030e565b916200030e565b91620003a46200003d565b80620003b08162000345565b0390a356fe60806040526004361015610013575b61028b565b61001d5f3561007c565b8063376791a114610077578063715018a6146100725780638da5cb5b1461006d578063d267732f14610068578063db72c6b8146100635763f2fde38b0361000e57610258565b6101ee565b6101c5565b610190565b61012f565b6100ed565b60e01c90565b60405190565b5f80fd5b5f80fd5b60018060a01b031690565b6100a490610090565b90565b6100b08161009b565b036100b757565b5f80fd5b905035906100c8826100a7565b565b906020828203126100e3576100e0915f016100bb565b90565b61008c565b5f0190565b3461011b576101056101003660046100ca565b610932565b61010d610082565b80610117816100e8565b0390f35b610088565b5f91031261012a57565b61008c565b3461015d5761013f366004610120565b61014761032c565b61014f610082565b80610159816100e8565b0390f35b610088565b61016b90610090565b90565b61017790610162565b9052565b919061018e905f6020850194019061016e565b565b346101c0576101a0366004610120565b6101bc6101ab6102c4565b6101b3610082565b9182918261017b565b0390f35b610088565b6101d0366004610120565b6101d86108cd565b6101e0610082565b806101ea816100e8565b0390f35b6101f9366004610120565b61020161081c565b610209610082565b80610213816100e8565b0390f35b61022081610162565b0361022757565b5f80fd5b9050359061023882610217565b565b9060208282031261025357610250915f0161022b565b90565b61008c565b346102865761027061026b36600461023a565b6103f7565b610278610082565b80610282816100e8565b0390f35b610088565b5f80fd5b5f90565b5f1c90565b60018060a01b031690565b6102af6102b491610293565b610298565b90565b6102c190546102a3565b90565b6102cc61028f565b506102d65f6102b7565b90565b6102e1610336565b6102e9610319565b565b90565b90565b61030561030061030a926102eb565b6102ee565b610090565b90565b610316906102f1565b90565b61032a6103255f61030d565b610479565b565b6103346102d9565b565b61033e6102c4565b61035761035161034c6104d8565b610162565b91610162565b0361035e57565b6103876103696104d8565b610371610082565b91829163118cdaa760e01b83526004830161017b565b0390fd5b61039c90610397610336565b61039e565b565b806103b96103b36103ae5f61030d565b610162565b91610162565b146103c9576103c790610479565b565b6103f36103d55f61030d565b6103dd610082565b918291631e4fbdf760e01b83526004830161017b565b0390fd5b6104009061038b565b565b5f1b90565b9061041860018060a01b0391610402565b9181191691161790565b61043661043161043b92610090565b6102ee565b610090565b90565b61044790610422565b90565b6104539061043e565b90565b90565b9061046e6104696104759261044a565b610456565b8254610407565b9055565b6104825f6102b7565b61048c825f610459565b906104c06104ba7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09361044a565b9161044a565b916104c9610082565b806104d3816100e8565b0390a3565b6104e061028f565b503390565b6104ed610336565b6104f5610787565b565b90565b61050e610509610513926102eb565b6102ee565b6104f7565b90565b60209181520190565b5f7f596f75206e65656420746f2073656e6420736f6d65204b4c4159000000000000910152565b610553601a602092610516565b61055c8161051f565b0190565b6105759060208101905f818303910152610546565b90565b1561057f57565b610587610082565b62461bcd60e51b81528061059d60048201610560565b0390fd5b60018060a01b031690565b6105b86105bd91610293565b6105a1565b90565b6105ca90546105ac565b90565b6105d69061043e565b90565b905090565b6105e95f80926105d9565b0190565b6105f6906105de565b90565b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b90610621906105f9565b810190811067ffffffffffffffff82111761063b57604052565b610603565b9061065361064c610082565b9283610617565b565b67ffffffffffffffff81116106735761066f6020916105f9565b0190565b610603565b9061068a61068583610655565b610640565b918252565b606090565b3d5f146106af576106a43d610678565b903d5f602084013e5b565b6106b761068f565b906106ad565b60207f63636f756e740000000000000000000000000000000000000000000000000000917f4661696c656420746f2073656e64204b4c415920746f207468652074617820615f8201520152565b6107176026604092610516565b610720816106bd565b0190565b6107399060208101905f81830391015261070a565b90565b1561074357565b61074b610082565b62461bcd60e51b81528061076160048201610724565b0390fd5b61076e906104f7565b9052565b9190610785905f60208501940190610765565b565b6107a33461079d6107975f6104fa565b916104f7565b11610578565b6107e05f806107ba6107b560016105c0565b6105cd565b346107c3610082565b90816107ce816105ed565b03925af16107da610694565b5061073c565b346108177f932aea04ae675778c045416b67dc8d486ffde60351e811a0a208a5888891f1b59161080e610082565b91829182610772565b0390a1565b6108246104e5565b565b61082e610336565b610836610838565b565b6108543461084e6108485f6104fa565b916104f7565b11610578565b6108915f8061086b61086660016105c0565b6105cd565b34610874610082565b908161087f816105ed565b03925af161088b610694565b5061073c565b346108c87fd0572805d790e0d28bb993c858da272484755e34742342d9ad07203e04d896dc916108bf610082565b91829182610772565b0390a1565b6108d5610826565b565b6108e8906108e3610336565b610925565b565b6108f390610422565b90565b6108ff906108ea565b90565b90565b9061091a610915610921926108f6565b610902565b8254610407565b9055565b610930906001610905565b565b61093b906108d7565b56fea26469706673582212203ca6348ee13fa0de27bd139d682a696f86911bc849b31523f880f8b19752ea3d64736f6c63430008150033",
  "deployedBytecode": "0x60806040526004361015610013575b61028b565b61001d5f3561007c565b8063376791a114610077578063715018a6146100725780638da5cb5b1461006d578063d267732f14610068578063db72c6b8146100635763f2fde38b0361000e57610258565b6101ee565b6101c5565b610190565b61012f565b6100ed565b60e01c90565b60405190565b5f80fd5b5f80fd5b60018060a01b031690565b6100a490610090565b90565b6100b08161009b565b036100b757565b5f80fd5b905035906100c8826100a7565b565b906020828203126100e3576100e0915f016100bb565b90565b61008c565b5f0190565b3461011b576101056101003660046100ca565b610932565b61010d610082565b80610117816100e8565b0390f35b610088565b5f91031261012a57565b61008c565b3461015d5761013f366004610120565b61014761032c565b61014f610082565b80610159816100e8565b0390f35b610088565b61016b90610090565b90565b61017790610162565b9052565b919061018e905f6020850194019061016e565b565b346101c0576101a0366004610120565b6101bc6101ab6102c4565b6101b3610082565b9182918261017b565b0390f35b610088565b6101d0366004610120565b6101d86108cd565b6101e0610082565b806101ea816100e8565b0390f35b6101f9366004610120565b61020161081c565b610209610082565b80610213816100e8565b0390f35b61022081610162565b0361022757565b5f80fd5b9050359061023882610217565b565b9060208282031261025357610250915f0161022b565b90565b61008c565b346102865761027061026b36600461023a565b6103f7565b610278610082565b80610282816100e8565b0390f35b610088565b5f80fd5b5f90565b5f1c90565b60018060a01b031690565b6102af6102b491610293565b610298565b90565b6102c190546102a3565b90565b6102cc61028f565b506102d65f6102b7565b90565b6102e1610336565b6102e9610319565b565b90565b90565b61030561030061030a926102eb565b6102ee565b610090565b90565b610316906102f1565b90565b61032a6103255f61030d565b610479565b565b6103346102d9565b565b61033e6102c4565b61035761035161034c6104d8565b610162565b91610162565b0361035e57565b6103876103696104d8565b610371610082565b91829163118cdaa760e01b83526004830161017b565b0390fd5b61039c90610397610336565b61039e565b565b806103b96103b36103ae5f61030d565b610162565b91610162565b146103c9576103c790610479565b565b6103f36103d55f61030d565b6103dd610082565b918291631e4fbdf760e01b83526004830161017b565b0390fd5b6104009061038b565b565b5f1b90565b9061041860018060a01b0391610402565b9181191691161790565b61043661043161043b92610090565b6102ee565b610090565b90565b61044790610422565b90565b6104539061043e565b90565b90565b9061046e6104696104759261044a565b610456565b8254610407565b9055565b6104825f6102b7565b61048c825f610459565b906104c06104ba7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09361044a565b9161044a565b916104c9610082565b806104d3816100e8565b0390a3565b6104e061028f565b503390565b6104ed610336565b6104f5610787565b565b90565b61050e610509610513926102eb565b6102ee565b6104f7565b90565b60209181520190565b5f7f596f75206e65656420746f2073656e6420736f6d65204b4c4159000000000000910152565b610553601a602092610516565b61055c8161051f565b0190565b6105759060208101905f818303910152610546565b90565b1561057f57565b610587610082565b62461bcd60e51b81528061059d60048201610560565b0390fd5b60018060a01b031690565b6105b86105bd91610293565b6105a1565b90565b6105ca90546105ac565b90565b6105d69061043e565b90565b905090565b6105e95f80926105d9565b0190565b6105f6906105de565b90565b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b90610621906105f9565b810190811067ffffffffffffffff82111761063b57604052565b610603565b9061065361064c610082565b9283610617565b565b67ffffffffffffffff81116106735761066f6020916105f9565b0190565b610603565b9061068a61068583610655565b610640565b918252565b606090565b3d5f146106af576106a43d610678565b903d5f602084013e5b565b6106b761068f565b906106ad565b60207f63636f756e740000000000000000000000000000000000000000000000000000917f4661696c656420746f2073656e64204b4c415920746f207468652074617820615f8201520152565b6107176026604092610516565b610720816106bd565b0190565b6107399060208101905f81830391015261070a565b90565b1561074357565b61074b610082565b62461bcd60e51b81528061076160048201610724565b0390fd5b61076e906104f7565b9052565b9190610785905f60208501940190610765565b565b6107a33461079d6107975f6104fa565b916104f7565b11610578565b6107e05f806107ba6107b560016105c0565b6105cd565b346107c3610082565b90816107ce816105ed565b03925af16107da610694565b5061073c565b346108177f932aea04ae675778c045416b67dc8d486ffde60351e811a0a208a5888891f1b59161080e610082565b91829182610772565b0390a1565b6108246104e5565b565b61082e610336565b610836610838565b565b6108543461084e6108485f6104fa565b916104f7565b11610578565b6108915f8061086b61086660016105c0565b6105cd565b34610874610082565b908161087f816105ed565b03925af161088b610694565b5061073c565b346108c87fd0572805d790e0d28bb993c858da272484755e34742342d9ad07203e04d896dc916108bf610082565b91829182610772565b0390a1565b6108d5610826565b565b6108e8906108e3610336565b610925565b565b6108f390610422565b90565b6108ff906108ea565b90565b90565b9061091a610915610921926108f6565b610902565b8254610407565b9055565b610930906001610905565b565b61093b906108d7565b56fea26469706673582212203ca6348ee13fa0de27bd139d682a696f86911bc849b31523f880f8b19752ea3d64736f6c63430008150033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "116:1057:11:-:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;199:127::-;;;;:::i;:::-;254:64;267:51;275:42;267:51;:::i;:::-;254:64;;:::i;:::-;199:127::o;116:1057::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;1225:187:0:-;1273:12;:26;;1289:10;1297:1;1289:10;:::i;:::-;1273:26;:::i;:::-;;;:::i;:::-;;1269:95;;1392:12;;;:::i;:::-;1225:187::o;1269:95::-;1322:31;1342:10;1350:1;1342:10;:::i;:::-;1322:31;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;116:1057:11;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::o;2912:187:0:-;3004:6;;;:::i;:::-;3020:17;3029:8;3020:17;;:::i;:::-;3083:8;3052:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;2912:187::o",
  "deployedSourceMap": "116:1057:11:-:0;;;;;;;;;-1:-1:-1;116:1057:11;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;1638:85:0:-;1684:7;;:::i;:::-;1710:6;;;;:::i;:::-;1703:13;:::o;1500:62::-;;;:::i;:::-;1554:1;;:::i;:::-;1500:62::o;116:1057:11:-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;2293:101:0:-;2376:10;;2384:1;2376:10;:::i;:::-;;:::i;:::-;2293:101::o;:::-;;;:::i;:::-;:::o;1796:162::-;1855:7;;:::i;:::-;:23;;1866:12;;:::i;:::-;1855:23;:::i;:::-;;;:::i;:::-;;1851:101;;1796:162::o;1851:101::-;1901:40;1928:12;;:::i;:::-;1901:40;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;1500:62;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;2543:215::-;2627:8;:22;;2639:10;2647:1;2639:10;:::i;:::-;2627:22;:::i;:::-;;;:::i;:::-;;2623:91;;2742:8;;;:::i;:::-;2543:215::o;2623:91::-;2672:31;2692:10;2700:1;2692:10;:::i;:::-;2672:31;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;2543:215;;;;:::i;:::-;:::o;116:1057:11:-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2912:187:0:-;3004:6;;;:::i;:::-;3020:17;3029:8;3020:17;;:::i;:::-;3083:8;3052:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;2912:187::o;656:96:1:-;709:7;;:::i;:::-;735:10;;728:17;:::o;1500:62:0:-;;;:::i;:::-;1554:1;;:::i;:::-;1500:62::o;116:1057:11:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;427:302::-;494:52;502:9;:13;;514:1;502:13;:::i;:::-;;;:::i;:::-;;494:52;:::i;:::-;621:55;573:37;:10;:15;:10;;;:::i;:::-;:15;:::i;:::-;596:9;573:37;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;621:55;:::i;:::-;711:9;692:29;;;;;:::i;:::-;;;;;;:::i;:::-;;;;427:302::o;:::-;;;:::i;:::-;:::o;1500:62:0:-;;;:::i;:::-;1554:1;;:::i;:::-;1500:62::o;737:304:11:-;805:52;813:9;:13;;825:1;813:13;:::i;:::-;;;:::i;:::-;;805:52;:::i;:::-;932:55;884:37;:10;:15;:10;;;:::i;:::-;:15;:::i;:::-;907:9;884:37;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;932:55;:::i;:::-;1023:9;1003:30;;;;;:::i;:::-;;;;;;:::i;:::-;;;;737:304::o;:::-;;;:::i;:::-;:::o;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;116:1057:11:-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;1049:119::-;1133:27;1049:119;1133:27;;:::i;:::-;1049:119::o;:::-;;;;:::i;:::-;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TaxPayment is Ownable {\r\n\r\n    address payable private taxAccount;\r\n\r\n    constructor(address _owner) Ownable(_owner) {\r\n        taxAccount = payable(0xcd48B32650621694240FAFB2D467CdB52fd95795);\r\n    }\r\n\r\n    event AcquisitionTaxPaid(uint256 klay);\r\n    event CapitalGainsTaxPaid(uint256 klay);\r\n\r\n    function payAcquisitionTax() external payable onlyOwner {\r\n        require(msg.value > 0, \"You need to send some KLAY\");\r\n        (bool sent, ) = taxAccount.call{value: msg.value}(\"\");\r\n        require(sent, \"Failed to send KLAY to the tax account\");\r\n        emit AcquisitionTaxPaid(msg.value);\r\n    }\r\n\r\n    function payCapitalGainsTax() external payable onlyOwner {\r\n        require(msg.value > 0, \"You need to send some KLAY\");\r\n        (bool sent, ) = taxAccount.call{value: msg.value}(\"\");\r\n        require(sent, \"Failed to send KLAY to the tax account\");\r\n        emit CapitalGainsTaxPaid(msg.value);\r\n    }\r\n\r\n    function setBankAccount(address payable _newTaxAccount) public onlyOwner {\r\n        taxAccount = _newTaxAccount;\r\n    }\r\n\r\n}",
  "sourcePath": "C:\\Users\\SSAFY\\Desktop\\S10P31C203\\blockchain\\contracts\\TaxPayment.sol",
  "ast": {
    "absolutePath": "project:/contracts/TaxPayment.sol",
    "exportedSymbols": {
      "Context": [
        177
      ],
      "Ownable": [
        147
      ],
      "TaxPayment": [
        2864
      ]
    },
    "id": 2865,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2754,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:11"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2755,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2865,
        "sourceUnit": 148,
        "src": "60:52:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2756,
              "name": "Ownable",
              "nameLocations": [
                "139:7:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "139:7:11"
            },
            "id": 2757,
            "nodeType": "InheritanceSpecifier",
            "src": "139:7:11"
          }
        ],
        "canonicalName": "TaxPayment",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2864,
        "linearizedBaseContracts": [
          2864,
          147,
          177
        ],
        "name": "TaxPayment",
        "nameLocation": "125:10:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2759,
            "mutability": "mutable",
            "name": "taxAccount",
            "nameLocation": "180:10:11",
            "nodeType": "VariableDeclaration",
            "scope": 2864,
            "src": "156:34:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2758,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "156:15:11",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2774,
              "nodeType": "Block",
              "src": "243:83:11",
              "statements": [
                {
                  "expression": {
                    "id": 2772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2767,
                      "name": "taxAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2759,
                      "src": "254:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307863643438423332363530363231363934323430464146423244343637436442353266643935373935",
                          "id": 2770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "275:42:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xcd48B32650621694240FAFB2D467CdB52fd95795"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "267:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 2768,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "267:8:11",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "267:51:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "254:64:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2773,
                  "nodeType": "ExpressionStatement",
                  "src": "254:64:11"
                }
              ]
            },
            "id": 2775,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2764,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2761,
                    "src": "235:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2765,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2763,
                  "name": "Ownable",
                  "nameLocations": [
                    "227:7:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "227:7:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "227:15:11"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2761,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "219:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2775,
                  "src": "211:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "211:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "210:16:11"
            },
            "returnParameters": {
              "id": 2766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "243:0:11"
            },
            "scope": 2864,
            "src": "199:127:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "932aea04ae675778c045416b67dc8d486ffde60351e811a0a208a5888891f1b5",
            "id": 2779,
            "name": "AcquisitionTaxPaid",
            "nameLocation": "340:18:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2777,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "klay",
                  "nameLocation": "367:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2779,
                  "src": "359:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "358:14:11"
            },
            "src": "334:39:11"
          },
          {
            "anonymous": false,
            "eventSelector": "d0572805d790e0d28bb993c858da272484755e34742342d9ad07203e04d896dc",
            "id": 2783,
            "name": "CapitalGainsTaxPaid",
            "nameLocation": "385:19:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2781,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "klay",
                  "nameLocation": "413:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2783,
                  "src": "405:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "404:14:11"
            },
            "src": "379:40:11"
          },
          {
            "body": {
              "id": 2816,
              "nodeType": "Block",
              "src": "483:246:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2789,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "502:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "506:5:11",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "502:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "514:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "502:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f2073656e6420736f6d65204b4c4159",
                        "id": 2793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "517:28:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dddbdd4719b5c7105966b0666bb2f94a5be73e349f9c78274949aac71b326b6a",
                          "typeString": "literal_string \"You need to send some KLAY\""
                        },
                        "value": "You need to send some KLAY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dddbdd4719b5c7105966b0666bb2f94a5be73e349f9c78274949aac71b326b6a",
                          "typeString": "literal_string \"You need to send some KLAY\""
                        }
                      ],
                      "id": 2788,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "494:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "494:52:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2795,
                  "nodeType": "ExpressionStatement",
                  "src": "494:52:11"
                },
                {
                  "assignments": [
                    2797,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2797,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "563:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2816,
                      "src": "558:9:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2796,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "558:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2805,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 2803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "607:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 2798,
                          "name": "taxAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2759,
                          "src": "573:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "584:4:11",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "573:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 2802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 2800,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "596:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "600:5:11",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "596:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "573:33:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 2804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "573:37:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "557:53:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2807,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2797,
                        "src": "629:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204b4c415920746f2074686520746178206163636f756e74",
                        "id": 2808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "635:40:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cb9959c0492ce78ff0a533ed63bee25e126e80a847d07e80b57c5aedcc8cf74",
                          "typeString": "literal_string \"Failed to send KLAY to the tax account\""
                        },
                        "value": "Failed to send KLAY to the tax account"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cb9959c0492ce78ff0a533ed63bee25e126e80a847d07e80b57c5aedcc8cf74",
                          "typeString": "literal_string \"Failed to send KLAY to the tax account\""
                        }
                      ],
                      "id": 2806,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "621:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "621:55:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2810,
                  "nodeType": "ExpressionStatement",
                  "src": "621:55:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2812,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "711:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "715:5:11",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "711:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2811,
                      "name": "AcquisitionTaxPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2779,
                      "src": "692:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2815,
                  "nodeType": "EmitStatement",
                  "src": "687:34:11"
                }
              ]
            },
            "functionSelector": "db72c6b8",
            "id": 2817,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2786,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2785,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "473:9:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "473:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "473:9:11"
              }
            ],
            "name": "payAcquisitionTax",
            "nameLocation": "436:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "453:2:11"
            },
            "returnParameters": {
              "id": 2787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:0:11"
            },
            "scope": 2864,
            "src": "427:302:11",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2850,
              "nodeType": "Block",
              "src": "794:247:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2823,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "813:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "817:5:11",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "813:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "825:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "813:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f2073656e6420736f6d65204b4c4159",
                        "id": 2827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "828:28:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dddbdd4719b5c7105966b0666bb2f94a5be73e349f9c78274949aac71b326b6a",
                          "typeString": "literal_string \"You need to send some KLAY\""
                        },
                        "value": "You need to send some KLAY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dddbdd4719b5c7105966b0666bb2f94a5be73e349f9c78274949aac71b326b6a",
                          "typeString": "literal_string \"You need to send some KLAY\""
                        }
                      ],
                      "id": 2822,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "805:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "805:52:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2829,
                  "nodeType": "ExpressionStatement",
                  "src": "805:52:11"
                },
                {
                  "assignments": [
                    2831,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2831,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "874:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2850,
                      "src": "869:9:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2830,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "869:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2839,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 2837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "918:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 2832,
                          "name": "taxAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2759,
                          "src": "884:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "895:4:11",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "884:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 2836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 2834,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "907:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "911:5:11",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "907:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "884:33:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 2838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "884:37:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "868:53:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2841,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2831,
                        "src": "940:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204b4c415920746f2074686520746178206163636f756e74",
                        "id": 2842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "946:40:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cb9959c0492ce78ff0a533ed63bee25e126e80a847d07e80b57c5aedcc8cf74",
                          "typeString": "literal_string \"Failed to send KLAY to the tax account\""
                        },
                        "value": "Failed to send KLAY to the tax account"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cb9959c0492ce78ff0a533ed63bee25e126e80a847d07e80b57c5aedcc8cf74",
                          "typeString": "literal_string \"Failed to send KLAY to the tax account\""
                        }
                      ],
                      "id": 2840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "932:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "932:55:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2844,
                  "nodeType": "ExpressionStatement",
                  "src": "932:55:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2846,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1023:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1027:5:11",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1023:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2845,
                      "name": "CapitalGainsTaxPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2783,
                      "src": "1003:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1003:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2849,
                  "nodeType": "EmitStatement",
                  "src": "998:35:11"
                }
              ]
            },
            "functionSelector": "d267732f",
            "id": 2851,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2820,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2819,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "784:9:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "784:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "784:9:11"
              }
            ],
            "name": "payCapitalGainsTax",
            "nameLocation": "746:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "764:2:11"
            },
            "returnParameters": {
              "id": 2821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:0:11"
            },
            "scope": 2864,
            "src": "737:304:11",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2862,
              "nodeType": "Block",
              "src": "1122:46:11",
              "statements": [
                {
                  "expression": {
                    "id": 2860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2858,
                      "name": "taxAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2759,
                      "src": "1133:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2859,
                      "name": "_newTaxAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2853,
                      "src": "1146:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1133:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2861,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:27:11"
                }
              ]
            },
            "functionSelector": "376791a1",
            "id": 2863,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2856,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2855,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1112:9:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "1112:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "1112:9:11"
              }
            ],
            "name": "setBankAccount",
            "nameLocation": "1058:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2853,
                  "mutability": "mutable",
                  "name": "_newTaxAccount",
                  "nameLocation": "1089:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2863,
                  "src": "1073:30:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:15:11",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1072:32:11"
            },
            "returnParameters": {
              "id": 2857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1122:0:11"
            },
            "scope": 2864,
            "src": "1049:119:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2865,
        "src": "116:1057:11",
        "usedErrors": [
          13,
          18
        ],
        "usedEvents": [
          24,
          2779,
          2783
        ]
      }
    ],
    "src": "33:1140:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-05-14T08:09:25.741Z",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}